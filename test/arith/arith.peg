// Simple Arithmetics Grammar
// ==========================
//
// Accepts expressions like "2 * (3 + 4)" and computes their value.

//@namespace MyProject
//@classname ExpressionParser

@members {
    Indent              As Long
    
    
}

@trace ConsoleTrace

Expression
  = head:Term (_ op:("+" / "-") _ tail:Term {
        If $op = "+" Then
            $head = $head + $tail
        Else
            $head = $head - $tail
        End If
    }
    )* { $$ = $head }

Term
  = head:Factor (_ op:("*"i / "/"s) _ tail:Factor {
        If $op = "*" Then
            $head = $head * $tail
        Else
            $head = $head / $tail
        End If
    }
    )* { $$ = $head }

Factor
  = "(" _ expr:Expression _ ")" { $$ = $expr }
  / Integer ^ErrInteger 

Integer "integer"
  =  _ <[0-9]+> { $$ = CLng($$text) }

ErrInteger
  = (!Integer .)+ Integer
  
_ "whitespace"
  = [ \t\n\ra-fh-Z\x30\u0031\62g]i* //t ti
  
//t = "abcd"
//ti = "efgh"i
  
@{
Private Sub Test()

End Sub
}

@prolog {
    Dim oJson As Object
    With ctx.UserData
}
@epilog {
    End With
}
